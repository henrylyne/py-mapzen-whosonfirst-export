#!/usr/bin/env python

import sys
import os
import json
import csv
import logging

if __name__ == '__main__':

    import optparse
    opt_parser = optparse.OptionParser()

    opt_parser.add_option('-s', '--source', dest='source', action='store', default=None, help='Where to read files from')
    opt_parser.add_option('-f', '--foreign-key', dest='foreign_key', action='store', default=None, help='')
    opt_parser.add_option('-c', '--concordances', dest='concordances', action='store', default=None, help='Where to write concordances (default is STDOUT)')

    opt_parser.add_option('-v', '--verbose', dest='verbose', action='store_true', default=False, help='Be chatty (default is false)')
    options, args = opt_parser.parse_args()

    if options.verbose:	
        logging.basicConfig(level=logging.DEBUG)
    else:
        logging.basicConfig(level=logging.INFO)

    source = os.path.abspath(options.source)
    fh = sys.stdout

    if options.concordances:
        path = os.path.abspath(options.concordances)
        fh = open(path, 'w')

    writer = csv.writer(fh)

    for (path, dirs, files) in os.walk(source):

        for f in files:

            f = os.path.join(path, f)
            f = os.path.abspath(f)

            fh = open(f, 'r')
            data = json.load(fh)

            props = data['properties']

            wofid = props['wof:id']
            other = props.get(options.foreign_key, None)
            
            if other:
                c = (wofid, other)
                writer.writerow(c)

    sys.exit()
